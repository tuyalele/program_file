C51 COMPILER V9.54   TIMER                                                                 02/27/2021 10:59:48 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Objects\timer.obj
COMPILER INVOKED BY: H:\Keil_v5\C51\BIN\C51.EXE H\timer.c COMPACT RTX51 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\H;.\mcu_sdk;.\
                    -UART;.\0.96OLED;.\SHT30) DEBUG OBJECTEXTEND PRINT(.\Listings\timer.lst) TABS(2) OBJECT(.\Objects\timer.obj)

line level    source

   1          /*************  功能说明  **************
   2          
   3          本程序演示3个定时器的使用, 本例程均使用16位自动重装.
   4          
   5          下载时, 选择时钟 24MHZ (用户可自行修改频率).
   6          
   7          ******************************************/
   8          
   9          
  10          //#define   MAIN_Fosc   24000000UL  //定义主时钟
  11          
  12          #include "main.h"
  13          
  14          #include  "timer.h"
  15          #define Timer0_Reload (MAIN_Fosc / 2000)    //Timer 1 中断频率, 2000次/秒
  16          #define Timer1_Reload (MAIN_Fosc / 2000)    //Timer 1 中断频率, 2000次/秒
  17          #define Timer2_Reload (MAIN_Fosc / 3000)    //Timer 2 中断频率, 3000次/秒
  18          
  19          
  20          
  21          
  22          //========================================================================
  23          // 函数: void Timer0_init(void)
  24          // 描述: timer0初始化函数.
  25          // 参数: none.
  26          // 返回: none.
  27          // 版本: V1.0, 2015-1-12
  28          //========================================================================
  29          void  Timer0_init(void)//1毫秒@22.1184MHz
  30          {
  31   1          TR0 = 0;  //停止计数
  32   1      
  33   1      
  34   1          ET0 = 1;  //允许中断
  35   1        //  PT0 = 1;  //高优先级中断
  36   1          TMOD &= ~0x03;
  37   1          TMOD |= 0;  //工作模式, 0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装, 3: 16位自动重装, 不可屏蔽中断
  38   1        //  TMOD |=  0x04;  //对外计数或分频
  39   1          TMOD &= ~0x04;  //定时
  40   1        //  INT_CLKO |=  0x01;  //输出时钟
  41   1          INT_CLKO &= ~0x01;  //不输出时钟
  42   1      
  43   1            AUXR |=  0x80;  //1T mode
  44   1            TH0 = (u8)((65536UL - Timer0_Reload) / 256);//0xA9
  45   1            TL0 = (u8)((65536UL - Timer0_Reload) % 256);//0x9A
  46   1          TR0 = 1;  //开始运行
  47   1      }
  48          
  49          //========================================================================
  50          // 函数: void Timer1_init(void)
  51          // 描述: timer1初始化函数.
  52          // 参数: none.
  53          // 返回: none.
  54          // 版本: V1.0, 2015-1-12
C51 COMPILER V9.54   TIMER                                                                 02/27/2021 10:59:48 PAGE 2   

  55          //========================================================================
  56          void  Timer1_init(void)
  57          {
  58   1          TR1 = 0;  //停止计数
  59   1      
  60   1        #if (Timer1_Reload < 64)  // 如果用户设置值不合适， 则不启动定时器
                  #error "Timer1设置的中断过快!"
              
                #elif ((Timer1_Reload/12) < 65536UL)  // 如果用户设置值不合适， 则不启动定时器
  64   1          ET1 = 1;  //允许中断
  65   1        //  PT1 = 1;  //高优先级中断
  66   1          TMOD &= ~0x30;
  67   1          TMOD |= (0 << 4); //工作模式, 0: 16位自动重装, 1: 16位定时/计数, 2: 8位自动重装
  68   1        //  TMOD |=  0x40;  //对外计数或分频
  69   1          TMOD &= ~0x40;  //定时
  70   1        //  INT_CLKO |=  0x02;  //输出时钟
  71   1          INT_CLKO &= ~0x02;  //不输出时钟
  72   1      
  73   1          #if (Timer1_Reload < 65536UL)
  74   1            AUXR |=  0x40;  //1T mode
  75   1            TH1 = (u8)((65536UL - Timer1_Reload) / 256);
  76   1            TL1 = (u8)((65536UL - Timer1_Reload) % 256);
  77   1          #else
                    AUXR &= ~0x40;  //12T mode
                    TH1 = (u8)((65536UL - Timer1_Reload/12) / 256);
                    TL1 = (u8)((65536UL - Timer1_Reload/12) % 256);
                  #endif
  82   1      
  83   1          TR1 = 1;  //开始运行
  84   1      
  85   1        #else
                  #error "Timer1设置的中断过慢!"
                #endif
  88   1      }
  89          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     50    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
