C51 COMPILER V9.54   OLED                                                                  02/27/2021 10:59:50 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: H:\Keil_v5\C51\BIN\C51.EXE 0.96OLED\oled.c COMPACT RTX51 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\H;.\mcu_
                    -sdk;.\UART;.\0.96OLED;.\SHT30) DEBUG OBJECTEXTEND PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          //******************************************************************************/。
   2          #include "oled.h"
   3          //#include "stdlib.h"
   4          #include "oledfont.h"
   5          //#include "delay.h"
   6          //OLED的显存
   7          //存放格式如下.
   8          //[0]0 1 2 3 ... 127  
   9          //[1]0 1 2 3 ... 127  
  10          //[2]0 1 2 3 ... 127  
  11          //[3]0 1 2 3 ... 127  
  12          //[4]0 1 2 3 ... 127  
  13          //[5]0 1 2 3 ... 127  
  14          //[6]0 1 2 3 ... 127  
  15          //[7]0 1 2 3 ... 127         
  16          
  17          
  18          //void delay_ms(unsigned int ms)
  19          //{                         
  20          //  unsigned int a;
  21          //  while(ms)
  22          //  {
  23          //    a=1800;
  24          //    while(a--);
  25          //    ms--;
  26          //  }
  27          //  return;
  28          //}
  29          
  30          
  31          /**********************************************
  32          //IIC Start
  33          **********************************************/
  34          void IIC_Start()
  35          {
  36   1      
  37   1        OLED_SCLK_Set() ;
  38   1        OLED_SDIN_Set();
  39   1        OLED_SDIN_Clr();
  40   1        OLED_SCLK_Clr();
  41   1      }
  42          
  43          /**********************************************
  44          //IIC Stop
  45          **********************************************/
  46          void IIC_Stop()
  47          {
  48   1      OLED_SCLK_Set() ;
  49   1      //  OLED_SCLK_Clr();
  50   1        OLED_SDIN_Clr();
  51   1        OLED_SDIN_Set();
  52   1        
  53   1      }
  54          
C51 COMPILER V9.54   OLED                                                                  02/27/2021 10:59:50 PAGE 2   

  55          void IIC_Wait_Ack()
  56          {
  57   1      
  58   1        //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为上拉输入模式
  59   1        //GPIOB->CRH |= 0x00080000;
  60   1      //  OLED_SDA = 1;
  61   1      //  delay_us(1);
  62   1        //OLED_SCL = 1;
  63   1        //delay_us(50000);
  64   1      /*  while(1)
  65   1        {
  66   1          if(!OLED_SDA)       //判断是否接收到OLED 应答信号
  67   1          {
  68   1            //GPIOB->CRH &= 0XFFF0FFFF; //设置PB12为通用推免输出模式
  69   1            //GPIOB->CRH |= 0x00030000;
  70   1            return;
  71   1          }
  72   1        }
  73   1      */
  74   1        OLED_SCLK_Set() ;
  75   1        OLED_SCLK_Clr();
  76   1      }
  77          /**********************************************
  78          // IIC Write byte
  79          **********************************************/
  80          
  81          void Write_IIC_Byte(unsigned char IIC_Byte)
  82          {
  83   1        unsigned char i;
  84   1        unsigned char m,da;
  85   1        da=IIC_Byte;
  86   1        OLED_SCLK_Clr();
  87   1        for(i=0;i<8;i++)    
  88   1        {
  89   2            m=da;
  90   2          //  OLED_SCLK_Clr();
  91   2          m=m&0x80;
  92   2          if(m==0x80)
  93   2          {OLED_SDIN_Set();}
  94   2          else OLED_SDIN_Clr();
  95   2            da=da<<1;
  96   2          OLED_SCLK_Set();
  97   2          OLED_SCLK_Clr();
  98   2          }
  99   1      
 100   1      
 101   1      }
 102          /**********************************************
 103          // IIC Write Command
 104          **********************************************/
 105          void Write_IIC_Command(unsigned char IIC_Command)
 106          {
 107   1         IIC_Start();
 108   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 109   1        IIC_Wait_Ack(); 
 110   1         Write_IIC_Byte(0x00);      //write command
 111   1        IIC_Wait_Ack(); 
 112   1         Write_IIC_Byte(IIC_Command); 
 113   1        IIC_Wait_Ack(); 
 114   1         IIC_Stop();
 115   1      }
 116          /**********************************************
C51 COMPILER V9.54   OLED                                                                  02/27/2021 10:59:50 PAGE 3   

 117          // IIC Write Data
 118          **********************************************/
 119          void Write_IIC_Data(unsigned char IIC_Data)
 120          {
 121   1         IIC_Start();
 122   1         Write_IIC_Byte(0x78);      //D/C#=0; R/W#=0
 123   1        IIC_Wait_Ack(); 
 124   1         Write_IIC_Byte(0x40);      //write data
 125   1        IIC_Wait_Ack(); 
 126   1         Write_IIC_Byte(IIC_Data);
 127   1        IIC_Wait_Ack(); 
 128   1         IIC_Stop();
 129   1      }
 130          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 131          {
 132   1        if(cmd)
 133   1            {
 134   2      
 135   2         Write_IIC_Data(dat);
 136   2         
 137   2          }
 138   1        else {
 139   2         Write_IIC_Command(dat);
 140   2          
 141   2        }
 142   1      
 143   1      
 144   1      }
 145          
 146          /********************************************
 147          // fill_Picture
 148          ********************************************/
 149          void fill_picture(unsigned char fill_Data)
 150          {
 151   1        unsigned char m,n;
 152   1        for(m=0;m<8;m++)
 153   1        {
 154   2          OLED_WR_Byte(0xb0+m,0);   //page0-page1
 155   2          OLED_WR_Byte(0x00,0);   //low column start address
 156   2          OLED_WR_Byte(0x10,0);   //high column start address
 157   2          for(n=0;n<128;n++)
 158   2            {
 159   3              OLED_WR_Byte(fill_Data,1);
 160   3            }
 161   2        }
 162   1      }
 163          
 164          
 165          /***********************Delay****************************************/
 166          void Delay_50ms(unsigned int Del_50ms)
 167          {
 168   1        unsigned int m;
 169   1        for(;Del_50ms>0;Del_50ms--)
 170   1          for(m=6245;m>0;m--);
 171   1      }
 172          
 173          void Delay_1ms(unsigned int Del_1ms)
 174          {
 175   1        unsigned char j;
 176   1        while(Del_1ms--)
 177   1        { 
 178   2          for(j=0;j<123;j++);
C51 COMPILER V9.54   OLED                                                                  02/27/2021 10:59:50 PAGE 4   

 179   2        }
 180   1      }
 181          
 182          //坐标设置
 183          
 184            void OLED_Set_Pos(unsigned char x, unsigned char y) 
 185          {   OLED_WR_Byte(0xb0+y,OLED_CMD);
 186   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 187   1        OLED_WR_Byte((x&0x0f),OLED_CMD); 
 188   1      }       
 189          //开启OLED显示    
 190          void OLED_Display_On(void)
 191          {
 192   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 193   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 194   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 195   1      }
 196          //关闭OLED显示     
 197          void OLED_Display_Off(void)
 198          {
 199   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 200   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 201   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 202   1      }            
 203          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 204          void OLED_Clear(void)  
 205          {  
 206   1        u8 i,n;       
 207   1        for(i=0;i<8;i++)  
 208   1        {  
 209   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 210   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 211   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 212   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 213   2        } //更新显示
 214   1      }
 215          void OLED_On(void)  
 216          {  
 217   1        u8 i,n;       
 218   1        for(i=0;i<8;i++)  
 219   1        {  
 220   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 221   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 222   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 223   2          for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 224   2        } //更新显示
 225   1      }
 226          //在指定位置显示一个字符,包括部分字符
 227          //x:0~127
 228          //y:0~63
 229          //mode:0,反白显示;1,正常显示         
 230          //size:选择字体 16/12 
 231          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 232          {       
 233   1        unsigned char c=0,i=0;  
 234   1          c=chr-' ';//得到偏移后的值      
 235   1          if(x>Max_Column-1){x=0;y=y+2;}
 236   1          if(Char_Size ==16)
 237   1            {
 238   2            OLED_Set_Pos(x,y);  
 239   2            for(i=0;i<8;i++)
 240   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
C51 COMPILER V9.54   OLED                                                                  02/27/2021 10:59:50 PAGE 5   

 241   2            OLED_Set_Pos(x,y+1);
 242   2            for(i=0;i<8;i++)
 243   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 244   2            }
 245   1            else {  
 246   2              OLED_Set_Pos(x,y);
 247   2              for(i=0;i<6;i++)
 248   2              OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 249   2              
 250   2            }
 251   1      }
 252          //m^n函数
 253          u32 oled_pow(u8 m,u8 n)
 254          {
 255   1        u32 result=1;  
 256   1        while(n--)result*=m;    
 257   1        return result;
 258   1      }         
 259          //显示2个数字
 260          //x,y :起点坐标  
 261          //len :数字的位数
 262          //size:字体大小
 263          //mode:模式 0,填充模式;1,叠加模式
 264          //num:数值(0~4294967295);       
 265          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 266          {           
 267   1        u8 t,temp;
 268   1        u8 enshow=0;               
 269   1        for(t=0;t<len;t++)
 270   1        {
 271   2          temp=(num/oled_pow(10,len-t-1))%10;
 272   2          if(enshow==0&&t<(len-1))
 273   2          {
 274   3            if(temp==0)
 275   3            {
 276   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 277   4              continue;
 278   4            }else enshow=1; 
 279   3             
 280   3          }
 281   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 282   2        }
 283   1      } 
 284          //显示一个字符号串
 285          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 286          {
 287   1        unsigned char j=0;
 288   1        while (chr[j]!='\0')
 289   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 290   2            x+=8;
 291   2          if(x>120){x=0;y+=2;}
 292   2            j++;
 293   2        }
 294   1      }
 295          //显示汉字
 296          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 297          {               
 298   1        u8 t,adder=0;
 299   1        OLED_Set_Pos(x,y);  
 300   1          for(t=0;t<16;t++)
 301   1          {
 302   2              OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
C51 COMPILER V9.54   OLED                                                                  02/27/2021 10:59:50 PAGE 6   

 303   2              adder+=1;
 304   2           }  
 305   1          OLED_Set_Pos(x,y+1);  
 306   1          for(t=0;t<16;t++)
 307   1            { 
 308   2              OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 309   2              adder+=1;
 310   2            }         
 311   1      }
 312          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 313          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char BMP[
             -])
 314          {   
 315   1       unsigned int j=0;
 316   1       unsigned char x,y;
 317   1        
 318   1        if(y1%8==0) y=y1/8;      
 319   1        else y=y1/8+1;
 320   1        for(y=y0;y<y1;y++)
 321   1        {
 322   2          OLED_Set_Pos(x0,y);
 323   2          for(x=x0;x<x1;x++)
 324   2            {      
 325   3              OLED_WR_Byte(BMP[j++],OLED_DATA);       
 326   3            }
 327   2        }
 328   1      } 
 329          
 330          //初始化SSD1306             
 331          void OLED_Init(void)
 332          {   
 333   1       
 334   1      OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 335   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 336   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 337   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 338   1        OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 339   1        OLED_WR_Byte(0x81,OLED_CMD); // contract control
 340   1        OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 341   1        OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 342   1        OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 343   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 344   1        OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 345   1        OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 346   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 347   1        OLED_WR_Byte(0x00,OLED_CMD);//
 348   1        
 349   1        OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 350   1        OLED_WR_Byte(0x80,OLED_CMD);//
 351   1        
 352   1        OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 353   1        OLED_WR_Byte(0x05,OLED_CMD);//
 354   1        
 355   1        OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 356   1        OLED_WR_Byte(0xF1,OLED_CMD);//
 357   1        
 358   1        OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 359   1        OLED_WR_Byte(0x12,OLED_CMD);//
 360   1        
 361   1        OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 362   1        OLED_WR_Byte(0x30,OLED_CMD);//
C51 COMPILER V9.54   OLED                                                                  02/27/2021 10:59:50 PAGE 7   

 363   1        
 364   1        OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
 365   1        OLED_WR_Byte(0x14,OLED_CMD);//
 366   1        
 367   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 368   1      }  
 369          
 370          
 371          
 372          
 373          
 374          
 375          
 376          
 377          
 378          
 379          
 380          
 381          
 382          
 383          
 384          
 385          
 386          
 387          
 388          
 389          
 390          
 391          
 392          
 393          
 394          
 395          
 396          
 397          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1369    ----
   CONSTANT SIZE    =   4120    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      41
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
