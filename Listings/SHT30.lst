C51 COMPILER V9.00   SHT30                                                                 02/22/2021 16:49:26 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SHT30
OBJECT MODULE PLACED IN .\Objects\SHT30.obj
COMPILER INVOKED BY: N:\Keil_v5\C51\BIN\C51.EXE H\SHT30.c COMPACT RTX51 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\H;.\mcu_sdk;.\
                    -UART;.\0.96OLED) DEBUG OBJECTEXTEND PRINT(.\Listings\SHT30.lst) TABS(2) OBJECT(.\Objects\SHT30.obj)

line level    source

   1          #define USER_SHT30_GLOBALS
   2          #include "main.h"
   3          //extern TYPE_BUFFER_S FlashBuffer;
   4          
   5          void IIC_Start(void)//I2C起始信号
   6          {
   7   1        SDA_30 = 1;       
   8   1        SCL_30 = 1;
   9   1        delay_us(40);
  10   1        SDA_30 = 0;//开始信号,scl=1,sda=1->sda=0。
  11   1        delay_us(40);
  12   1        SCL_30 = 0;//scl=0,拉低时钟线,准备数据的发送
  13   1        delay_us(40);
  14   1        
  15   1        
  16   1      } 
  17          
  18          
  19          
  20          void IIC_Stop(void)//I2C停止信号
  21          {
  22   1        SCL_30=0;
  23   1        SDA_30=0;//
  24   1        delay_us(40);
  25   1        SCL_30=1; //结束信号,scl=1,sda=0->sda=1。
  26   1        SDA_30=1;
  27   1        delay_us(40);                 
  28   1      }
  29          
  30          
  31          void IIC_Ack(void)
  32          {
  33   1        SCL_30=0;
  34   1        SDA_30=0;
  35   1        delay_us(20);
  36   1        SCL_30=1;
  37   1        delay_us(20);
  38   1        SCL_30=0;
  39   1        delay_us(20);
  40   1      }
  41          void IIC_NAck(void)
  42          {
  43   1        SCL_30=0;
  44   1        SDA_30=1;
  45   1        delay_us(20);
  46   1        SCL_30=1;
  47   1        delay_us(20);
  48   1        SCL_30=0;
  49   1      }   
  50          u8 IIC_Wait_Ack(void)
  51          {
  52   1        u8 ucErrTime=0;
  53   1        SDA_30=1;delay_us(10);     
  54   1        SCL_30=1;delay_us(10);   
C51 COMPILER V9.00   SHT30                                                                 02/22/2021 16:49:26 PAGE 2   

  55   1        while(SDA_30)
  56   1        {
  57   2          ucErrTime++;
  58   2          if(ucErrTime>250)
  59   2          {
  60   3            IIC_Stop();
  61   3            return 1;
  62   3          }
  63   2        }
  64   1        
  65   1        PrintString1("当前温度");
  66   1        
  67   1        SCL_30=0;//时钟输出0     
  68   1        return 0;  
  69   1      } 
  70          
  71          
  72          void IIC_Send_Byte(u8 txd)
  73          {                        
  74   1          u8 t;      
  75   1          SCL_30=0;//拉低时钟开始数据传输
  76   1          for(t=0;t<8;t++)
  77   1          {              
  78   2              SDA_30=(txd&0x80)>>7;
  79   2              txd<<=1;    
  80   2          delay_us(10);   
  81   2          SCL_30=1;
  82   2          delay_us(20); 
  83   2          SCL_30=0; 
  84   2          delay_us(10);
  85   2          }  
  86   1      }
  87          
  88          
  89          //一个参数 ack  当ack=1，发送应答信号，ack=0不发送应答信号
  90          u8 IIC_Read_Byte(unsigned char ack)
  91          {
  92   1        unsigned char i,receive=0;
  93   1          for(i=0;i<8;i++ )
  94   1        {
  95   2              SCL_30=0; 
  96   2              delay_us(20);
  97   2          SCL_30=1;
  98   2              receive<<=1;
  99   2              if(SDA_30)receive++;   
 100   2          delay_us(20); 
 101   2          }          
 102   1          if (!ack)
 103   1              IIC_NAck();//发送nACK
 104   1          else
 105   1              IIC_Ack(); //发送ACK   
 106   1          return receive;
 107   1      }
 108          void SHT_Init()
 109          {
 110   1         delay_ms(250); 
 111   1         //0x2130  表示周期模式 周期1ms
 112   1          IIC_Start();
 113   1          IIC_Send_Byte(0x88);
 114   1          IIC_Wait_Ack();
 115   1          IIC_Send_Byte(0x21);
 116   1          IIC_Wait_Ack();
C51 COMPILER V9.00   SHT30                                                                 02/22/2021 16:49:26 PAGE 3   

 117   1          IIC_Send_Byte(0x30);
 118   1          IIC_Wait_Ack();
 119   1           IIC_Stop();
 120   1         
 121   1         delay_ms(150); 
 122   1      }
 123          
 124          
 125          /*****************************************************************************
 126          函数名称 : sht_crc
 127          功能描述 : crc-8校验
 128          输入参数 : 无
 129          返回参数 : 无
 130          使用说明 : 无
 131          *****************************************************************************/ 
 132          u8 sht_crc(u8 *shtdata, u8 count)
 133          {
 134   1        u8 crc_bit;        // bit mask
 135   1        u8 crc = 0xFF;     // calculated checksum
 136   1        u8 byteCtr;        // byte counter
 137   1        
 138   1        // calculates 8-Bit checksum with given polynomial
 139   1        for(byteCtr = 0; byteCtr < count; ++byteCtr)
 140   1        {
 141   2          crc ^= (shtdata[byteCtr]);
 142   2          for(crc_bit = 8; crc_bit > 0; --crc_bit) //crc校验，最高位是1就^0x31
 143   2          {
 144   3            if(crc & 0x80)
 145   3              crc = (crc << 1) ^ 0x31;
 146   3            else
 147   3              crc = (crc << 1);
 148   3          }
 149   2        }
 150   1        return crc;
 151   1      }
 152          /*****************************************************************************
 153          函数名称 : sht30_read
 154          功能描述 : SHT30数据读取，通过oled显示
 155          输入参数 : 无
 156          返回参数 : 五
 157          使用说明 : 无
 158          *****************************************************************************/
 159          void sht30_read()
 160          {
 161   1        u8 result[10];
 162   1        u16 St;     //传感器的温度原始值
 163   1        u16 Srh;    //传感器的湿度原始值
 164   1        u16 e;      //计算出的水汽压
 165   1        signed int T;
 166   1        int AT;
 167   1      
 168   1         IIC_Start();
 169   1         IIC_Send_Byte(0x88);
 170   1         IIC_Wait_Ack();
 171   1         IIC_Send_Byte(0xe0);
 172   1         IIC_Wait_Ack();
 173   1         IIC_Send_Byte(0x00);
 174   1         IIC_Wait_Ack();
 175   1      
 176   1         IIC_Start();
 177   1         IIC_Send_Byte(0x89);
 178   1         IIC_Wait_Ack();
C51 COMPILER V9.00   SHT30                                                                 02/22/2021 16:49:26 PAGE 4   

 179   1        
 180   1      
 181   1         
 182   1      
 183   1        result[0] = IIC_Read_Byte(1);  //读到的数据暂存在result数组里
 184   1        result[1] = IIC_Read_Byte(1);
 185   1        result[2] = IIC_Read_Byte(1);
 186   1        result[3] = IIC_Read_Byte(1);
 187   1        result[4] = IIC_Read_Byte(1);
 188   1        result[5] = IIC_Read_Byte(0);
 189   1      
 190   1        if((sht_crc(result, 2)==result[2]) && (sht_crc(result+3, 2)==result[5]))//crc校验
 191   1        {
 192   2          St = (result[0]<<8) | result[1];  //温度拼接
 193   2          Srh = (result[3]<<8) | result[4]; //湿度拼接
 194   2          
 195   2              
 196   2          
 197   2          FlashBuffer.temper = (-450+1750*(1.0*St/65535));  //10倍实际温度，上报需要
 198   2          T = FlashBuffer.temper/10;                      //温度计算
 199   2          FlashBuffer.humidity = 100*(1.0*Srh/65535);         //湿度计算
 200   2          e = (FlashBuffer.humidity/100)*6.105*exp(17.27*T/(237.7+T));//水气压计算
 201   2          AT = 1.07*T+0.2*e-2.7;            //体感温度计算
 202   2          
 203   2          
 204   2          mcu_dp_value_update(DPID_TEMP_CURRENT,FlashBuffer.temper);     //VALUE型数据上报;
 205   2          mcu_dp_value_update(DPID_HUMIDITY_VALUE,FlashBuffer.humidity); //VALUE型数据上报;
 206   2      //    OLED_ShowNum(32,4,T,2,16);   //显示温度
 207   2      //    if(T>0)
 208   2      //      OLED_ShowChar(48,4,'`',16);
 209   2      //    else
 210   2      //      OLED_ShowChar(56,4,'`',16);
 211   2          
 212   2      //    OLED_ShowNum(104,4,FlashBuffer.humidity,2,16);  //显示湿度
 213   2      //    OLED_ShowChar(120,4,'%',16);
 214   2          
 215   2      //    OLED_ShowNum(64,6,AT,2,16);  //显示体感温度
 216   2      //    if(AT>0)
 217   2      //      OLED_ShowChar(80,6,'`',16);
 218   2      //    else
 219   2      //      OLED_ShowChar(88,6,'`',16);
 220   2        }
 221   1        else  //校验失败
 222   1        {
 223   2          PrintString1("校验失败"); 
 224   2      //    OLED_ShowStr(32,4,"error",16);  //显示错误
 225   2        }
 226   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    895    ----
   CONSTANT SIZE    =     18    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      26
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
